// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FlutterwaveButton/> applies left aligned style if alignLeft prop is present 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#f5a623",
        "borderColor": "#f5a623",
        "borderRadius": 6,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 52,
        "justifyContent": "center",
        "minWidth": 100,
        "overflow": "hidden",
        "paddingHorizontal": 16,
      },
      Object {},
      Object {
        "justifyContent": "flex-start",
      },
      undefined,
    ]
  }
  testID="flw-button"
>
  <Image
    fadeDuration={0}
    resizeMethod="resize"
    resizeMode="contain"
    source={
      Object {
        "testUri": "../../../src/assets/pry-button-content.png",
      }
    }
    style={
      Object {
        "height": 22.57633928570421,
        "resizeMode": "contain",
        "width": 187.3,
      }
    }
  />
</View>
`;

exports[`<FlutterwaveButton/> renders pay with flutterwave by default 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#f5a623",
        "borderColor": "#f5a623",
        "borderRadius": 6,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 52,
        "justifyContent": "center",
        "minWidth": 100,
        "overflow": "hidden",
        "paddingHorizontal": 16,
      },
      Object {},
      Object {},
      undefined,
    ]
  }
  testID="flw-button"
>
  <Image
    fadeDuration={0}
    resizeMethod="resize"
    resizeMode="contain"
    source={
      Object {
        "testUri": "../../../src/assets/pry-button-content.png",
      }
    }
    style={
      Object {
        "height": 22.57633928570421,
        "resizeMode": "contain",
        "width": 187.3,
      }
    }
  />
</View>
`;

exports[`<FlutterwaveButton/> renders with overlay and inactive style of button is disabled 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#f5a623",
        "borderColor": "#f5a623",
        "borderRadius": 6,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 52,
        "justifyContent": "center",
        "minWidth": 100,
        "overflow": "hidden",
        "paddingHorizontal": 16,
      },
      Object {
        "borderColor": "#f9ce85",
      },
      Object {},
      undefined,
    ]
  }
  testID="flw-button"
>
  <Image
    fadeDuration={0}
    resizeMethod="resize"
    resizeMode="contain"
    source={
      Object {
        "testUri": "../../../src/assets/pry-button-content.png",
      }
    }
    style={
      Object {
        "height": 22.57633928570421,
        "resizeMode": "contain",
        "width": 187.3,
      }
    }
  />
  <View
    style={
      Object {
        "backgroundColor": "rgba(255, 255, 255, 0.6)",
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  />
</View>
`;

exports[`<FlutterwaveButton/> replaces pay with flutterwave image with children 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "backgroundColor": "#f5a623",
        "borderColor": "#f5a623",
        "borderRadius": 6,
        "borderWidth": 1,
        "flexDirection": "row",
        "height": 52,
        "justifyContent": "center",
        "minWidth": 100,
        "overflow": "hidden",
        "paddingHorizontal": 16,
      },
      Object {},
      Object {},
      undefined,
    ]
  }
  testID="flw-button"
>
  <Text>
    Hello, World!
  </Text>
</View>
`;

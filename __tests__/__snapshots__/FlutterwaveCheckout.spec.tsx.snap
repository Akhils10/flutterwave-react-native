// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FlutterwaveCheckout/> renders with modal closed if visible prop is not true 1`] = `
<Modal
  animated={false}
  hardwareAccelerated={false}
  transparent={true}
  visible={false}
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "rgba(0, 0, 0, 0)",
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    testID="flw-checkout-backdrop"
  />
  <View
    style={
      Object {
        "backgroundColor": "#efefef",
        "borderTopLeftRadius": 34.95535714285714,
        "borderTopRightRadius": 34.95535714285714,
        "flex": 1,
        "marginTop": 1305,
        "opacity": 0,
        "overflow": "hidden",
        "paddingBottom": 96,
        "top": 96,
      }
    }
    testID="flw-checkout-dialog"
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={false}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onNavigationStateChange={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scalesPageToFit={true}
        source={
          Object {
            "uri": "",
          }
        }
        startInLoadingState={true}
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "flex": 1,
            },
          ]
        }
        useSharedProcessPool={true}
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0.3)",
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
        testID="flw-checkout-loader"
      >
        <Image
          resizeMode="contain"
          source={
            Object {
              "testUri": "../../../src/assets/loader.gif",
            }
          }
          style={
            Object {
              "height": 64,
              "resizeMode": "contain",
              "width": 64,
            }
          }
        />
      </View>
    </View>
  </View>
</Modal>
`;

exports[`<FlutterwaveCheckout/> renders with modal open if visible props is true 1`] = `
<Modal
  animated={false}
  hardwareAccelerated={false}
  transparent={true}
  visible={true}
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "rgba(0, 0, 0, 0)",
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
    testID="flw-checkout-backdrop"
  />
  <View
    style={
      Object {
        "backgroundColor": "#efefef",
        "borderTopLeftRadius": 34.95535714285714,
        "borderTopRightRadius": 34.95535714285714,
        "flex": 1,
        "marginTop": 1305,
        "opacity": 0,
        "overflow": "hidden",
        "paddingBottom": 96,
        "top": 96,
      }
    }
    testID="flw-checkout-dialog"
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          undefined,
        ]
      }
    >
      <RNCWebView
        cacheEnabled={true}
        injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
        injectedJavaScriptForMainFrameOnly={true}
        javaScriptEnabled={true}
        messagingEnabled={false}
        onContentProcessDidTerminate={[Function]}
        onHttpError={[Function]}
        onLoadingError={[Function]}
        onLoadingFinish={[Function]}
        onLoadingProgress={[Function]}
        onLoadingStart={[Function]}
        onMessage={[Function]}
        onNavigationStateChange={[Function]}
        onShouldStartLoadWithRequest={[Function]}
        scalesPageToFit={true}
        source={
          Object {
            "uri": "",
          }
        }
        startInLoadingState={true}
        style={
          Array [
            Object {
              "flex": 1,
              "overflow": "hidden",
            },
            Object {
              "backgroundColor": "#ffffff",
            },
            Object {
              "backgroundColor": "rgba(0,0,0,0)",
              "flex": 1,
            },
          ]
        }
        useSharedProcessPool={true}
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(255, 255, 255, 0.3)",
            "bottom": 0,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
        testID="flw-checkout-loader"
      >
        <Image
          resizeMode="contain"
          source={
            Object {
              "testUri": "../../../src/assets/loader.gif",
            }
          }
          style={
            Object {
              "height": 64,
              "resizeMode": "contain",
              "width": 64,
            }
          }
        />
      </View>
    </View>
  </View>
</Modal>
`;
